DOTFILES_PATH="${DOTFILES_PATH:=$HOME/.dotfiles}"

TERM="xterm-256color"
LANG="en_US.UTF-8"
LANGUAGE="en_US:en"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
KERL_BUILD_DOCS=yes

HOSTNAME="${HOSTNAME:=$(hostname)}"
DOTFILES_BIN="${DOTFILES_BIN:=$DOTFILES_PATH/src/local/bin}"
CARGO_HOME="${CARGO_HOME:=$HOME/.cargo}"
RUSTUP_HOME="${RUSTUP_HOME:=$HOME/.cargo}"
CARGO_BIN="${CARGO_BIN:=$CARGO_HOME/bin}"
YARN_HOME="${YARN_HOME:=$HOME/.yarn}"
YARN_BIN="${YARN_BIN:=$YARN_HOME/bin}"
RVM_HOME="${RVM_HOME:=$HOME/.rvm}"
RVM_BIN="${RVM_BIN:=$RVM_HOME/bin}"
SNAP_HOME="${SNAP_HOME:=/snap}"
SNAP_BIN="${SNAP_BIN:=$SNAP_HOME/bin}"
HELMENV_BIN="${HELMENV_BIN:=$DOTFILES_PATH/src/github/yuya-takeyama/helmenv/bin}"
TFENV_BIN="${TFENV_BIN:=$DOTFILES_PATH/src/github/tfutils/tfenv/bin}"
ASDF_DIR="${ASDF_DIR:=$DOTFILES_PATH/src/github/asdf-vm/asdf}"
GIT_ROOT_DIR="${GIT_ROOT_DIR:=$HOME/git}"

if [ -d "${ASDF_DIR}" ]; then . "${ASDF_DIR}/asdf.sh"; fi

if [ -x "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    KERL_CONFIGURE_OPTIONS="--disable-debug --without-javac --with-ssl=$(/opt/homebrew/bin/brew --prefix openssl@1.1)"
elif [ -x "/usr/local/bin/brew" ]; then
    eval "$(/usr/local/bin/brew shellenv)"
    KERL_CONFIGURE_OPTIONS="--disable-debug --without-javac --with-ssl=$(/usr/local/bin/brew --prefix openssl@1.1)"
else
    KERL_CONFIGURE_OPTIONS="--disable-debug --without-javac"
fi

# if command -v python2 >/dev/null 2>&1; then
#     PYTHON2_HOME="${PYTHON2_HOME:=$(python2 -m site --user-base)}"
#     PYTHON2_BIN="${PYTHON2_BIN:=$PYTHON2_HOME/bin}"
# fi

# if command -v python3 >/dev/null 2>&1; then
#     PYTHON3_HOME="${PYTHON3_HOME:=$(python3 -m site --user-base)}"
#     PYTHON3_BIN="${PYTHON3_BIN:=$PYTHON3_HOME/bin}"
# fi

if [ -f "${HOME}/.asdf/shims/python" ] 2>&1; then
    PYTHON3_HOME="${PYTHON3_HOME:=$(${HOME}/.asdf/shims/python -m site --user-base)}"
    PYTHON3_BIN="${PYTHON3_BIN:=$PYTHON3_HOME/bin}"
fi

if command -v go >/dev/null 2>&1; then
    GOPATH="$(go env GOPATH)"
    GOBIN="${GOPATH}/bin"
fi

if command -v gcloud >/dev/null 2>&1; then
    GCLOUD_PATH="$(asdf where gcloud)"
    GCLOUD_BIN="${GCLOUD_PATH}/bin"
    echo $GCOULD_BIN
fi
